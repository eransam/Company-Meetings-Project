{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../Utils/Config\";\n\nclass MeethingService {\n  async getAllGroups() {\n    const response = await axios.get(config.groupsUrl);\n    return response.data;\n  }\n\n  async getMeethingByGroup(groupId) {\n    const response = await axios.get(config.meetingPerGroup + groupId);\n    return response.data;\n  }\n\n  async addMeething(meething) {\n    const response = await axios.post(config.addMeeting, meething);\n    return response.data;\n  }\n\n  async deleteMeething(meethingId) {\n    await axios.delete(config.addMeeting + meethingId);\n  }\n\n}\n\nconst meethingService = new MeethingService();\nexport default meethingService;","map":{"version":3,"sources":["C:/Users/erans/OneDrive/שולחן העבודה/Company meetings-project/Frontend/src/Services/MeetingService.ts"],"names":["axios","config","MeethingService","getAllGroups","response","get","groupsUrl","data","getMeethingByGroup","groupId","meetingPerGroup","addMeething","meething","post","addMeeting","deleteMeething","meethingId","delete","meethingService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,eAAN,CAAsB;AAEO,QAAZC,YAAY,GAA0B;AAC/C,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAwBJ,MAAM,CAACK,SAA/B,CAAvB;AACA,WAAOF,QAAQ,CAACG,IAAhB;AACH;;AAE8B,QAAlBC,kBAAkB,CAACC,OAAD,EAA2C;AACtE,UAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAA0BJ,MAAM,CAACS,eAAP,GAAyBD,OAAnD,CAAvB;AACA,WAAOL,QAAQ,CAACG,IAAhB;AACH;;AAEuB,QAAXI,WAAW,CAACC,QAAD,EAAgD;AACpE,UAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAN,CAAyBZ,MAAM,CAACa,UAAhC,EAA4CF,QAA5C,CAAvB;AACA,WAAOR,QAAQ,CAACG,IAAhB;AACH;;AAE0B,QAAdQ,cAAc,CAACC,UAAD,EAAoC;AAC3D,UAAMhB,KAAK,CAACiB,MAAN,CAAahB,MAAM,CAACa,UAAP,GAAoBE,UAAjC,CAAN;AACH;;AAnBiB;;AAuBtB,MAAME,eAAe,GAAG,IAAIhB,eAAJ,EAAxB;AAEA,eAAegB,eAAf","sourcesContent":["import axios from \"axios\";\r\nimport GroupModel from \"../Models/devGruopsModel\";\r\nimport MeetingModel from \"../Models/meetingModel\";\r\nimport config from \"../Utils/Config\";\r\n\r\nclass MeethingService {\r\n\r\n    public async getAllGroups(): Promise<GroupModel[]> {\r\n        const response = await axios.get<GroupModel[]>(config.groupsUrl);\r\n        return response.data;\r\n    }\r\n\r\n    public async getMeethingByGroup(groupId: number): Promise<MeetingModel[]> {\r\n        const response = await axios.get<MeetingModel[]>(config.meetingPerGroup + groupId);\r\n        return response.data;\r\n    }\r\n\r\n    public async addMeething(meething: MeetingModel): Promise<MeetingModel> {\r\n        const response = await axios.post<MeetingModel>(config.addMeeting, meething);\r\n        return response.data;\r\n    }\r\n\r\n    public async deleteMeething(meethingId: number): Promise<void> {\r\n        await axios.delete(config.addMeeting + meethingId);\r\n    }\r\n\r\n}\r\n\r\nconst meethingService = new MeethingService();\r\n\r\nexport default meethingService;"]},"metadata":{},"sourceType":"module"}